
namespace uhal{

// ======================================================================================================================================================
// WARNING! This file is automatically generated! Do not modify it! Any changes will be overwritten!
// ======================================================================================================================================================

template< typename T0 >
void log( const Emergency& EMERGENCY , const T0& aArg0  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
		if( LoggingIncludes( EMERGENCY ) ){
			log_formatter< Emergency >::head();
			log_inserter( aArg0 );
			log_formatter< Emergency >::tail();
		}
	#endif
}

template< typename T0 , typename T1 >
void log( const Emergency& EMERGENCY , const T0& aArg0 , const T1& aArg1  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
		if( LoggingIncludes( EMERGENCY ) ){
			log_formatter< Emergency >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_formatter< Emergency >::tail();
		}
	#endif
}

template< typename T0 , typename T1 , typename T2 >
void log( const Emergency& EMERGENCY , const T0& aArg0 , const T1& aArg1 , const T2& aArg2  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
		if( LoggingIncludes( EMERGENCY ) ){
			log_formatter< Emergency >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_formatter< Emergency >::tail();
		}
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 >
void log( const Emergency& EMERGENCY , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
		if( LoggingIncludes( EMERGENCY ) ){
			log_formatter< Emergency >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_formatter< Emergency >::tail();
		}
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 >
void log( const Emergency& EMERGENCY , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
		if( LoggingIncludes( EMERGENCY ) ){
			log_formatter< Emergency >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_formatter< Emergency >::tail();
		}
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 >
void log( const Emergency& EMERGENCY , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
		if( LoggingIncludes( EMERGENCY ) ){
			log_formatter< Emergency >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_formatter< Emergency >::tail();
		}
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 >
void log( const Emergency& EMERGENCY , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
		if( LoggingIncludes( EMERGENCY ) ){
			log_formatter< Emergency >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_formatter< Emergency >::tail();
		}
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 >
void log( const Emergency& EMERGENCY , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
		if( LoggingIncludes( EMERGENCY ) ){
			log_formatter< Emergency >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_formatter< Emergency >::tail();
		}
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 >
void log( const Emergency& EMERGENCY , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
		if( LoggingIncludes( EMERGENCY ) ){
			log_formatter< Emergency >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_formatter< Emergency >::tail();
		}
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 >
void log( const Emergency& EMERGENCY , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
		if( LoggingIncludes( EMERGENCY ) ){
			log_formatter< Emergency >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_formatter< Emergency >::tail();
		}
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 >
void log( const Emergency& EMERGENCY , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
		if( LoggingIncludes( EMERGENCY ) ){
			log_formatter< Emergency >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_formatter< Emergency >::tail();
		}
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 >
void log( const Emergency& EMERGENCY , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
		if( LoggingIncludes( EMERGENCY ) ){
			log_formatter< Emergency >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_formatter< Emergency >::tail();
		}
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 >
void log( const Emergency& EMERGENCY , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
		if( LoggingIncludes( EMERGENCY ) ){
			log_formatter< Emergency >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_formatter< Emergency >::tail();
		}
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 >
void log( const Emergency& EMERGENCY , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
		if( LoggingIncludes( EMERGENCY ) ){
			log_formatter< Emergency >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_formatter< Emergency >::tail();
		}
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 >
void log( const Emergency& EMERGENCY , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
		if( LoggingIncludes( EMERGENCY ) ){
			log_formatter< Emergency >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_formatter< Emergency >::tail();
		}
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 >
void log( const Emergency& EMERGENCY , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
		if( LoggingIncludes( EMERGENCY ) ){
			log_formatter< Emergency >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_formatter< Emergency >::tail();
		}
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 >
void log( const Emergency& EMERGENCY , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
		if( LoggingIncludes( EMERGENCY ) ){
			log_formatter< Emergency >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_formatter< Emergency >::tail();
		}
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 >
void log( const Emergency& EMERGENCY , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
		if( LoggingIncludes( EMERGENCY ) ){
			log_formatter< Emergency >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_formatter< Emergency >::tail();
		}
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 >
void log( const Emergency& EMERGENCY , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
		if( LoggingIncludes( EMERGENCY ) ){
			log_formatter< Emergency >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_formatter< Emergency >::tail();
		}
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 >
void log( const Emergency& EMERGENCY , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
		if( LoggingIncludes( EMERGENCY ) ){
			log_formatter< Emergency >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_formatter< Emergency >::tail();
		}
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 >
void log( const Emergency& EMERGENCY , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
		if( LoggingIncludes( EMERGENCY ) ){
			log_formatter< Emergency >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_formatter< Emergency >::tail();
		}
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 >
void log( const Emergency& EMERGENCY , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
		if( LoggingIncludes( EMERGENCY ) ){
			log_formatter< Emergency >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_formatter< Emergency >::tail();
		}
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 >
void log( const Emergency& EMERGENCY , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
		if( LoggingIncludes( EMERGENCY ) ){
			log_formatter< Emergency >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_formatter< Emergency >::tail();
		}
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 >
void log( const Emergency& EMERGENCY , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
		if( LoggingIncludes( EMERGENCY ) ){
			log_formatter< Emergency >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_formatter< Emergency >::tail();
		}
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 >
void log( const Emergency& EMERGENCY , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
		if( LoggingIncludes( EMERGENCY ) ){
			log_formatter< Emergency >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_formatter< Emergency >::tail();
		}
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 >
void log( const Emergency& EMERGENCY , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
		if( LoggingIncludes( EMERGENCY ) ){
			log_formatter< Emergency >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_formatter< Emergency >::tail();
		}
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 >
void log( const Emergency& EMERGENCY , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
		if( LoggingIncludes( EMERGENCY ) ){
			log_formatter< Emergency >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_formatter< Emergency >::tail();
		}
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 >
void log( const Emergency& EMERGENCY , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26 , const T27& aArg27  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
		if( LoggingIncludes( EMERGENCY ) ){
			log_formatter< Emergency >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_inserter( aArg27 );
			log_formatter< Emergency >::tail();
		}
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 >
void log( const Emergency& EMERGENCY , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26 , const T27& aArg27 , const T28& aArg28  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
		if( LoggingIncludes( EMERGENCY ) ){
			log_formatter< Emergency >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_inserter( aArg27 );
			log_inserter( aArg28 );
			log_formatter< Emergency >::tail();
		}
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 >
void log( const Emergency& EMERGENCY , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26 , const T27& aArg27 , const T28& aArg28 , const T29& aArg29  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
		if( LoggingIncludes( EMERGENCY ) ){
			log_formatter< Emergency >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_inserter( aArg27 );
			log_inserter( aArg28 );
			log_inserter( aArg29 );
			log_formatter< Emergency >::tail();
		}
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 >
void log( const Emergency& EMERGENCY , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26 , const T27& aArg27 , const T28& aArg28 , const T29& aArg29 , const T30& aArg30  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
		if( LoggingIncludes( EMERGENCY ) ){
			log_formatter< Emergency >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_inserter( aArg27 );
			log_inserter( aArg28 );
			log_inserter( aArg29 );
			log_inserter( aArg30 );
			log_formatter< Emergency >::tail();
		}
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 >
void log( const Emergency& EMERGENCY , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26 , const T27& aArg27 , const T28& aArg28 , const T29& aArg29 , const T30& aArg30 , const T31& aArg31  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
		if( LoggingIncludes( EMERGENCY ) ){
			log_formatter< Emergency >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_inserter( aArg27 );
			log_inserter( aArg28 );
			log_inserter( aArg29 );
			log_inserter( aArg30 );
			log_inserter( aArg31 );
			log_formatter< Emergency >::tail();
		}
	#endif
}

// ======================================================================================================================================================
// WARNING! This file is automatically generated! Do not modify it! Any changes will be overwritten!
// ======================================================================================================================================================

template< typename T0 >
void log( const Alert& ALERT , const T0& aArg0  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
		if( LoggingIncludes( ALERT ) ){
			log_formatter< Alert >::head();
			log_inserter( aArg0 );
			log_formatter< Alert >::tail();
		}
	#endif
	#endif
}

template< typename T0 , typename T1 >
void log( const Alert& ALERT , const T0& aArg0 , const T1& aArg1  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
		if( LoggingIncludes( ALERT ) ){
			log_formatter< Alert >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_formatter< Alert >::tail();
		}
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 >
void log( const Alert& ALERT , const T0& aArg0 , const T1& aArg1 , const T2& aArg2  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
		if( LoggingIncludes( ALERT ) ){
			log_formatter< Alert >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_formatter< Alert >::tail();
		}
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 >
void log( const Alert& ALERT , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
		if( LoggingIncludes( ALERT ) ){
			log_formatter< Alert >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_formatter< Alert >::tail();
		}
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 >
void log( const Alert& ALERT , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
		if( LoggingIncludes( ALERT ) ){
			log_formatter< Alert >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_formatter< Alert >::tail();
		}
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 >
void log( const Alert& ALERT , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
		if( LoggingIncludes( ALERT ) ){
			log_formatter< Alert >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_formatter< Alert >::tail();
		}
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 >
void log( const Alert& ALERT , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
		if( LoggingIncludes( ALERT ) ){
			log_formatter< Alert >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_formatter< Alert >::tail();
		}
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 >
void log( const Alert& ALERT , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
		if( LoggingIncludes( ALERT ) ){
			log_formatter< Alert >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_formatter< Alert >::tail();
		}
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 >
void log( const Alert& ALERT , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
		if( LoggingIncludes( ALERT ) ){
			log_formatter< Alert >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_formatter< Alert >::tail();
		}
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 >
void log( const Alert& ALERT , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
		if( LoggingIncludes( ALERT ) ){
			log_formatter< Alert >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_formatter< Alert >::tail();
		}
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 >
void log( const Alert& ALERT , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
		if( LoggingIncludes( ALERT ) ){
			log_formatter< Alert >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_formatter< Alert >::tail();
		}
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 >
void log( const Alert& ALERT , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
		if( LoggingIncludes( ALERT ) ){
			log_formatter< Alert >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_formatter< Alert >::tail();
		}
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 >
void log( const Alert& ALERT , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
		if( LoggingIncludes( ALERT ) ){
			log_formatter< Alert >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_formatter< Alert >::tail();
		}
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 >
void log( const Alert& ALERT , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
		if( LoggingIncludes( ALERT ) ){
			log_formatter< Alert >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_formatter< Alert >::tail();
		}
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 >
void log( const Alert& ALERT , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
		if( LoggingIncludes( ALERT ) ){
			log_formatter< Alert >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_formatter< Alert >::tail();
		}
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 >
void log( const Alert& ALERT , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
		if( LoggingIncludes( ALERT ) ){
			log_formatter< Alert >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_formatter< Alert >::tail();
		}
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 >
void log( const Alert& ALERT , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
		if( LoggingIncludes( ALERT ) ){
			log_formatter< Alert >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_formatter< Alert >::tail();
		}
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 >
void log( const Alert& ALERT , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
		if( LoggingIncludes( ALERT ) ){
			log_formatter< Alert >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_formatter< Alert >::tail();
		}
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 >
void log( const Alert& ALERT , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
		if( LoggingIncludes( ALERT ) ){
			log_formatter< Alert >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_formatter< Alert >::tail();
		}
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 >
void log( const Alert& ALERT , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
		if( LoggingIncludes( ALERT ) ){
			log_formatter< Alert >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_formatter< Alert >::tail();
		}
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 >
void log( const Alert& ALERT , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
		if( LoggingIncludes( ALERT ) ){
			log_formatter< Alert >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_formatter< Alert >::tail();
		}
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 >
void log( const Alert& ALERT , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
		if( LoggingIncludes( ALERT ) ){
			log_formatter< Alert >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_formatter< Alert >::tail();
		}
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 >
void log( const Alert& ALERT , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
		if( LoggingIncludes( ALERT ) ){
			log_formatter< Alert >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_formatter< Alert >::tail();
		}
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 >
void log( const Alert& ALERT , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
		if( LoggingIncludes( ALERT ) ){
			log_formatter< Alert >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_formatter< Alert >::tail();
		}
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 >
void log( const Alert& ALERT , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
		if( LoggingIncludes( ALERT ) ){
			log_formatter< Alert >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_formatter< Alert >::tail();
		}
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 >
void log( const Alert& ALERT , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
		if( LoggingIncludes( ALERT ) ){
			log_formatter< Alert >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_formatter< Alert >::tail();
		}
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 >
void log( const Alert& ALERT , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
		if( LoggingIncludes( ALERT ) ){
			log_formatter< Alert >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_formatter< Alert >::tail();
		}
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 >
void log( const Alert& ALERT , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26 , const T27& aArg27  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
		if( LoggingIncludes( ALERT ) ){
			log_formatter< Alert >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_inserter( aArg27 );
			log_formatter< Alert >::tail();
		}
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 >
void log( const Alert& ALERT , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26 , const T27& aArg27 , const T28& aArg28  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
		if( LoggingIncludes( ALERT ) ){
			log_formatter< Alert >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_inserter( aArg27 );
			log_inserter( aArg28 );
			log_formatter< Alert >::tail();
		}
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 >
void log( const Alert& ALERT , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26 , const T27& aArg27 , const T28& aArg28 , const T29& aArg29  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
		if( LoggingIncludes( ALERT ) ){
			log_formatter< Alert >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_inserter( aArg27 );
			log_inserter( aArg28 );
			log_inserter( aArg29 );
			log_formatter< Alert >::tail();
		}
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 >
void log( const Alert& ALERT , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26 , const T27& aArg27 , const T28& aArg28 , const T29& aArg29 , const T30& aArg30  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
		if( LoggingIncludes( ALERT ) ){
			log_formatter< Alert >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_inserter( aArg27 );
			log_inserter( aArg28 );
			log_inserter( aArg29 );
			log_inserter( aArg30 );
			log_formatter< Alert >::tail();
		}
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 >
void log( const Alert& ALERT , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26 , const T27& aArg27 , const T28& aArg28 , const T29& aArg29 , const T30& aArg30 , const T31& aArg31  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
		if( LoggingIncludes( ALERT ) ){
			log_formatter< Alert >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_inserter( aArg27 );
			log_inserter( aArg28 );
			log_inserter( aArg29 );
			log_inserter( aArg30 );
			log_inserter( aArg31 );
			log_formatter< Alert >::tail();
		}
	#endif
	#endif
}

// ======================================================================================================================================================
// WARNING! This file is automatically generated! Do not modify it! Any changes will be overwritten!
// ======================================================================================================================================================

template< typename T0 >
void log( const Critical& CRITICAL , const T0& aArg0  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
		if( LoggingIncludes( CRITICAL ) ){
			log_formatter< Critical >::head();
			log_inserter( aArg0 );
			log_formatter< Critical >::tail();
		}
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 >
void log( const Critical& CRITICAL , const T0& aArg0 , const T1& aArg1  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
		if( LoggingIncludes( CRITICAL ) ){
			log_formatter< Critical >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_formatter< Critical >::tail();
		}
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 >
void log( const Critical& CRITICAL , const T0& aArg0 , const T1& aArg1 , const T2& aArg2  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
		if( LoggingIncludes( CRITICAL ) ){
			log_formatter< Critical >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_formatter< Critical >::tail();
		}
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 >
void log( const Critical& CRITICAL , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
		if( LoggingIncludes( CRITICAL ) ){
			log_formatter< Critical >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_formatter< Critical >::tail();
		}
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 >
void log( const Critical& CRITICAL , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
		if( LoggingIncludes( CRITICAL ) ){
			log_formatter< Critical >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_formatter< Critical >::tail();
		}
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 >
void log( const Critical& CRITICAL , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
		if( LoggingIncludes( CRITICAL ) ){
			log_formatter< Critical >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_formatter< Critical >::tail();
		}
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 >
void log( const Critical& CRITICAL , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
		if( LoggingIncludes( CRITICAL ) ){
			log_formatter< Critical >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_formatter< Critical >::tail();
		}
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 >
void log( const Critical& CRITICAL , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
		if( LoggingIncludes( CRITICAL ) ){
			log_formatter< Critical >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_formatter< Critical >::tail();
		}
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 >
void log( const Critical& CRITICAL , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
		if( LoggingIncludes( CRITICAL ) ){
			log_formatter< Critical >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_formatter< Critical >::tail();
		}
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 >
void log( const Critical& CRITICAL , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
		if( LoggingIncludes( CRITICAL ) ){
			log_formatter< Critical >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_formatter< Critical >::tail();
		}
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 >
void log( const Critical& CRITICAL , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
		if( LoggingIncludes( CRITICAL ) ){
			log_formatter< Critical >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_formatter< Critical >::tail();
		}
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 >
void log( const Critical& CRITICAL , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
		if( LoggingIncludes( CRITICAL ) ){
			log_formatter< Critical >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_formatter< Critical >::tail();
		}
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 >
void log( const Critical& CRITICAL , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
		if( LoggingIncludes( CRITICAL ) ){
			log_formatter< Critical >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_formatter< Critical >::tail();
		}
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 >
void log( const Critical& CRITICAL , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
		if( LoggingIncludes( CRITICAL ) ){
			log_formatter< Critical >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_formatter< Critical >::tail();
		}
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 >
void log( const Critical& CRITICAL , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
		if( LoggingIncludes( CRITICAL ) ){
			log_formatter< Critical >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_formatter< Critical >::tail();
		}
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 >
void log( const Critical& CRITICAL , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
		if( LoggingIncludes( CRITICAL ) ){
			log_formatter< Critical >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_formatter< Critical >::tail();
		}
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 >
void log( const Critical& CRITICAL , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
		if( LoggingIncludes( CRITICAL ) ){
			log_formatter< Critical >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_formatter< Critical >::tail();
		}
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 >
void log( const Critical& CRITICAL , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
		if( LoggingIncludes( CRITICAL ) ){
			log_formatter< Critical >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_formatter< Critical >::tail();
		}
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 >
void log( const Critical& CRITICAL , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
		if( LoggingIncludes( CRITICAL ) ){
			log_formatter< Critical >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_formatter< Critical >::tail();
		}
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 >
void log( const Critical& CRITICAL , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
		if( LoggingIncludes( CRITICAL ) ){
			log_formatter< Critical >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_formatter< Critical >::tail();
		}
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 >
void log( const Critical& CRITICAL , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
		if( LoggingIncludes( CRITICAL ) ){
			log_formatter< Critical >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_formatter< Critical >::tail();
		}
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 >
void log( const Critical& CRITICAL , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
		if( LoggingIncludes( CRITICAL ) ){
			log_formatter< Critical >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_formatter< Critical >::tail();
		}
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 >
void log( const Critical& CRITICAL , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
		if( LoggingIncludes( CRITICAL ) ){
			log_formatter< Critical >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_formatter< Critical >::tail();
		}
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 >
void log( const Critical& CRITICAL , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
		if( LoggingIncludes( CRITICAL ) ){
			log_formatter< Critical >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_formatter< Critical >::tail();
		}
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 >
void log( const Critical& CRITICAL , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
		if( LoggingIncludes( CRITICAL ) ){
			log_formatter< Critical >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_formatter< Critical >::tail();
		}
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 >
void log( const Critical& CRITICAL , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
		if( LoggingIncludes( CRITICAL ) ){
			log_formatter< Critical >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_formatter< Critical >::tail();
		}
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 >
void log( const Critical& CRITICAL , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
		if( LoggingIncludes( CRITICAL ) ){
			log_formatter< Critical >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_formatter< Critical >::tail();
		}
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 >
void log( const Critical& CRITICAL , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26 , const T27& aArg27  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
		if( LoggingIncludes( CRITICAL ) ){
			log_formatter< Critical >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_inserter( aArg27 );
			log_formatter< Critical >::tail();
		}
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 >
void log( const Critical& CRITICAL , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26 , const T27& aArg27 , const T28& aArg28  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
		if( LoggingIncludes( CRITICAL ) ){
			log_formatter< Critical >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_inserter( aArg27 );
			log_inserter( aArg28 );
			log_formatter< Critical >::tail();
		}
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 >
void log( const Critical& CRITICAL , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26 , const T27& aArg27 , const T28& aArg28 , const T29& aArg29  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
		if( LoggingIncludes( CRITICAL ) ){
			log_formatter< Critical >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_inserter( aArg27 );
			log_inserter( aArg28 );
			log_inserter( aArg29 );
			log_formatter< Critical >::tail();
		}
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 >
void log( const Critical& CRITICAL , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26 , const T27& aArg27 , const T28& aArg28 , const T29& aArg29 , const T30& aArg30  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
		if( LoggingIncludes( CRITICAL ) ){
			log_formatter< Critical >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_inserter( aArg27 );
			log_inserter( aArg28 );
			log_inserter( aArg29 );
			log_inserter( aArg30 );
			log_formatter< Critical >::tail();
		}
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 >
void log( const Critical& CRITICAL , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26 , const T27& aArg27 , const T28& aArg28 , const T29& aArg29 , const T30& aArg30 , const T31& aArg31  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
		if( LoggingIncludes( CRITICAL ) ){
			log_formatter< Critical >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_inserter( aArg27 );
			log_inserter( aArg28 );
			log_inserter( aArg29 );
			log_inserter( aArg30 );
			log_inserter( aArg31 );
			log_formatter< Critical >::tail();
		}
	#endif
	#endif
	#endif
}

// ======================================================================================================================================================
// WARNING! This file is automatically generated! Do not modify it! Any changes will be overwritten!
// ======================================================================================================================================================

template< typename T0 >
void log( const Error& ERROR , const T0& aArg0  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
		if( LoggingIncludes( ERROR ) ){
			log_formatter< Error >::head();
			log_inserter( aArg0 );
			log_formatter< Error >::tail();
		}
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 >
void log( const Error& ERROR , const T0& aArg0 , const T1& aArg1  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
		if( LoggingIncludes( ERROR ) ){
			log_formatter< Error >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_formatter< Error >::tail();
		}
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 >
void log( const Error& ERROR , const T0& aArg0 , const T1& aArg1 , const T2& aArg2  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
		if( LoggingIncludes( ERROR ) ){
			log_formatter< Error >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_formatter< Error >::tail();
		}
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 >
void log( const Error& ERROR , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
		if( LoggingIncludes( ERROR ) ){
			log_formatter< Error >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_formatter< Error >::tail();
		}
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 >
void log( const Error& ERROR , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
		if( LoggingIncludes( ERROR ) ){
			log_formatter< Error >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_formatter< Error >::tail();
		}
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 >
void log( const Error& ERROR , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
		if( LoggingIncludes( ERROR ) ){
			log_formatter< Error >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_formatter< Error >::tail();
		}
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 >
void log( const Error& ERROR , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
		if( LoggingIncludes( ERROR ) ){
			log_formatter< Error >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_formatter< Error >::tail();
		}
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 >
void log( const Error& ERROR , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
		if( LoggingIncludes( ERROR ) ){
			log_formatter< Error >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_formatter< Error >::tail();
		}
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 >
void log( const Error& ERROR , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
		if( LoggingIncludes( ERROR ) ){
			log_formatter< Error >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_formatter< Error >::tail();
		}
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 >
void log( const Error& ERROR , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
		if( LoggingIncludes( ERROR ) ){
			log_formatter< Error >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_formatter< Error >::tail();
		}
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 >
void log( const Error& ERROR , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
		if( LoggingIncludes( ERROR ) ){
			log_formatter< Error >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_formatter< Error >::tail();
		}
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 >
void log( const Error& ERROR , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
		if( LoggingIncludes( ERROR ) ){
			log_formatter< Error >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_formatter< Error >::tail();
		}
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 >
void log( const Error& ERROR , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
		if( LoggingIncludes( ERROR ) ){
			log_formatter< Error >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_formatter< Error >::tail();
		}
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 >
void log( const Error& ERROR , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
		if( LoggingIncludes( ERROR ) ){
			log_formatter< Error >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_formatter< Error >::tail();
		}
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 >
void log( const Error& ERROR , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
		if( LoggingIncludes( ERROR ) ){
			log_formatter< Error >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_formatter< Error >::tail();
		}
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 >
void log( const Error& ERROR , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
		if( LoggingIncludes( ERROR ) ){
			log_formatter< Error >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_formatter< Error >::tail();
		}
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 >
void log( const Error& ERROR , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
		if( LoggingIncludes( ERROR ) ){
			log_formatter< Error >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_formatter< Error >::tail();
		}
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 >
void log( const Error& ERROR , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
		if( LoggingIncludes( ERROR ) ){
			log_formatter< Error >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_formatter< Error >::tail();
		}
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 >
void log( const Error& ERROR , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
		if( LoggingIncludes( ERROR ) ){
			log_formatter< Error >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_formatter< Error >::tail();
		}
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 >
void log( const Error& ERROR , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
		if( LoggingIncludes( ERROR ) ){
			log_formatter< Error >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_formatter< Error >::tail();
		}
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 >
void log( const Error& ERROR , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
		if( LoggingIncludes( ERROR ) ){
			log_formatter< Error >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_formatter< Error >::tail();
		}
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 >
void log( const Error& ERROR , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
		if( LoggingIncludes( ERROR ) ){
			log_formatter< Error >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_formatter< Error >::tail();
		}
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 >
void log( const Error& ERROR , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
		if( LoggingIncludes( ERROR ) ){
			log_formatter< Error >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_formatter< Error >::tail();
		}
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 >
void log( const Error& ERROR , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
		if( LoggingIncludes( ERROR ) ){
			log_formatter< Error >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_formatter< Error >::tail();
		}
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 >
void log( const Error& ERROR , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
		if( LoggingIncludes( ERROR ) ){
			log_formatter< Error >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_formatter< Error >::tail();
		}
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 >
void log( const Error& ERROR , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
		if( LoggingIncludes( ERROR ) ){
			log_formatter< Error >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_formatter< Error >::tail();
		}
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 >
void log( const Error& ERROR , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
		if( LoggingIncludes( ERROR ) ){
			log_formatter< Error >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_formatter< Error >::tail();
		}
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 >
void log( const Error& ERROR , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26 , const T27& aArg27  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
		if( LoggingIncludes( ERROR ) ){
			log_formatter< Error >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_inserter( aArg27 );
			log_formatter< Error >::tail();
		}
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 >
void log( const Error& ERROR , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26 , const T27& aArg27 , const T28& aArg28  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
		if( LoggingIncludes( ERROR ) ){
			log_formatter< Error >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_inserter( aArg27 );
			log_inserter( aArg28 );
			log_formatter< Error >::tail();
		}
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 >
void log( const Error& ERROR , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26 , const T27& aArg27 , const T28& aArg28 , const T29& aArg29  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
		if( LoggingIncludes( ERROR ) ){
			log_formatter< Error >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_inserter( aArg27 );
			log_inserter( aArg28 );
			log_inserter( aArg29 );
			log_formatter< Error >::tail();
		}
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 >
void log( const Error& ERROR , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26 , const T27& aArg27 , const T28& aArg28 , const T29& aArg29 , const T30& aArg30  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
		if( LoggingIncludes( ERROR ) ){
			log_formatter< Error >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_inserter( aArg27 );
			log_inserter( aArg28 );
			log_inserter( aArg29 );
			log_inserter( aArg30 );
			log_formatter< Error >::tail();
		}
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 >
void log( const Error& ERROR , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26 , const T27& aArg27 , const T28& aArg28 , const T29& aArg29 , const T30& aArg30 , const T31& aArg31  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
		if( LoggingIncludes( ERROR ) ){
			log_formatter< Error >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_inserter( aArg27 );
			log_inserter( aArg28 );
			log_inserter( aArg29 );
			log_inserter( aArg30 );
			log_inserter( aArg31 );
			log_formatter< Error >::tail();
		}
	#endif
	#endif
	#endif
	#endif
}

// ======================================================================================================================================================
// WARNING! This file is automatically generated! Do not modify it! Any changes will be overwritten!
// ======================================================================================================================================================

template< typename T0 >
void log( const Warning& WARNING , const T0& aArg0  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
		if( LoggingIncludes( WARNING ) ){
			log_formatter< Warning >::head();
			log_inserter( aArg0 );
			log_formatter< Warning >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 >
void log( const Warning& WARNING , const T0& aArg0 , const T1& aArg1  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
		if( LoggingIncludes( WARNING ) ){
			log_formatter< Warning >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_formatter< Warning >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 >
void log( const Warning& WARNING , const T0& aArg0 , const T1& aArg1 , const T2& aArg2  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
		if( LoggingIncludes( WARNING ) ){
			log_formatter< Warning >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_formatter< Warning >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 >
void log( const Warning& WARNING , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
		if( LoggingIncludes( WARNING ) ){
			log_formatter< Warning >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_formatter< Warning >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 >
void log( const Warning& WARNING , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
		if( LoggingIncludes( WARNING ) ){
			log_formatter< Warning >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_formatter< Warning >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 >
void log( const Warning& WARNING , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
		if( LoggingIncludes( WARNING ) ){
			log_formatter< Warning >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_formatter< Warning >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 >
void log( const Warning& WARNING , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
		if( LoggingIncludes( WARNING ) ){
			log_formatter< Warning >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_formatter< Warning >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 >
void log( const Warning& WARNING , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
		if( LoggingIncludes( WARNING ) ){
			log_formatter< Warning >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_formatter< Warning >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 >
void log( const Warning& WARNING , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
		if( LoggingIncludes( WARNING ) ){
			log_formatter< Warning >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_formatter< Warning >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 >
void log( const Warning& WARNING , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
		if( LoggingIncludes( WARNING ) ){
			log_formatter< Warning >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_formatter< Warning >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 >
void log( const Warning& WARNING , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
		if( LoggingIncludes( WARNING ) ){
			log_formatter< Warning >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_formatter< Warning >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 >
void log( const Warning& WARNING , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
		if( LoggingIncludes( WARNING ) ){
			log_formatter< Warning >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_formatter< Warning >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 >
void log( const Warning& WARNING , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
		if( LoggingIncludes( WARNING ) ){
			log_formatter< Warning >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_formatter< Warning >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 >
void log( const Warning& WARNING , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
		if( LoggingIncludes( WARNING ) ){
			log_formatter< Warning >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_formatter< Warning >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 >
void log( const Warning& WARNING , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
		if( LoggingIncludes( WARNING ) ){
			log_formatter< Warning >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_formatter< Warning >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 >
void log( const Warning& WARNING , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
		if( LoggingIncludes( WARNING ) ){
			log_formatter< Warning >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_formatter< Warning >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 >
void log( const Warning& WARNING , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
		if( LoggingIncludes( WARNING ) ){
			log_formatter< Warning >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_formatter< Warning >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 >
void log( const Warning& WARNING , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
		if( LoggingIncludes( WARNING ) ){
			log_formatter< Warning >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_formatter< Warning >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 >
void log( const Warning& WARNING , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
		if( LoggingIncludes( WARNING ) ){
			log_formatter< Warning >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_formatter< Warning >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 >
void log( const Warning& WARNING , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
		if( LoggingIncludes( WARNING ) ){
			log_formatter< Warning >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_formatter< Warning >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 >
void log( const Warning& WARNING , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
		if( LoggingIncludes( WARNING ) ){
			log_formatter< Warning >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_formatter< Warning >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 >
void log( const Warning& WARNING , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
		if( LoggingIncludes( WARNING ) ){
			log_formatter< Warning >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_formatter< Warning >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 >
void log( const Warning& WARNING , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
		if( LoggingIncludes( WARNING ) ){
			log_formatter< Warning >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_formatter< Warning >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 >
void log( const Warning& WARNING , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
		if( LoggingIncludes( WARNING ) ){
			log_formatter< Warning >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_formatter< Warning >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 >
void log( const Warning& WARNING , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
		if( LoggingIncludes( WARNING ) ){
			log_formatter< Warning >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_formatter< Warning >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 >
void log( const Warning& WARNING , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
		if( LoggingIncludes( WARNING ) ){
			log_formatter< Warning >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_formatter< Warning >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 >
void log( const Warning& WARNING , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
		if( LoggingIncludes( WARNING ) ){
			log_formatter< Warning >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_formatter< Warning >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 >
void log( const Warning& WARNING , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26 , const T27& aArg27  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
		if( LoggingIncludes( WARNING ) ){
			log_formatter< Warning >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_inserter( aArg27 );
			log_formatter< Warning >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 >
void log( const Warning& WARNING , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26 , const T27& aArg27 , const T28& aArg28  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
		if( LoggingIncludes( WARNING ) ){
			log_formatter< Warning >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_inserter( aArg27 );
			log_inserter( aArg28 );
			log_formatter< Warning >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 >
void log( const Warning& WARNING , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26 , const T27& aArg27 , const T28& aArg28 , const T29& aArg29  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
		if( LoggingIncludes( WARNING ) ){
			log_formatter< Warning >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_inserter( aArg27 );
			log_inserter( aArg28 );
			log_inserter( aArg29 );
			log_formatter< Warning >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 >
void log( const Warning& WARNING , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26 , const T27& aArg27 , const T28& aArg28 , const T29& aArg29 , const T30& aArg30  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
		if( LoggingIncludes( WARNING ) ){
			log_formatter< Warning >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_inserter( aArg27 );
			log_inserter( aArg28 );
			log_inserter( aArg29 );
			log_inserter( aArg30 );
			log_formatter< Warning >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 >
void log( const Warning& WARNING , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26 , const T27& aArg27 , const T28& aArg28 , const T29& aArg29 , const T30& aArg30 , const T31& aArg31  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
		if( LoggingIncludes( WARNING ) ){
			log_formatter< Warning >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_inserter( aArg27 );
			log_inserter( aArg28 );
			log_inserter( aArg29 );
			log_inserter( aArg30 );
			log_inserter( aArg31 );
			log_formatter< Warning >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
}

// ======================================================================================================================================================
// WARNING! This file is automatically generated! Do not modify it! Any changes will be overwritten!
// ======================================================================================================================================================

template< typename T0 >
void log( const Notice& NOTICE , const T0& aArg0  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
		if( LoggingIncludes( NOTICE ) ){
			log_formatter< Notice >::head();
			log_inserter( aArg0 );
			log_formatter< Notice >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 >
void log( const Notice& NOTICE , const T0& aArg0 , const T1& aArg1  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
		if( LoggingIncludes( NOTICE ) ){
			log_formatter< Notice >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_formatter< Notice >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 >
void log( const Notice& NOTICE , const T0& aArg0 , const T1& aArg1 , const T2& aArg2  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
		if( LoggingIncludes( NOTICE ) ){
			log_formatter< Notice >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_formatter< Notice >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 >
void log( const Notice& NOTICE , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
		if( LoggingIncludes( NOTICE ) ){
			log_formatter< Notice >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_formatter< Notice >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 >
void log( const Notice& NOTICE , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
		if( LoggingIncludes( NOTICE ) ){
			log_formatter< Notice >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_formatter< Notice >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 >
void log( const Notice& NOTICE , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
		if( LoggingIncludes( NOTICE ) ){
			log_formatter< Notice >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_formatter< Notice >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 >
void log( const Notice& NOTICE , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
		if( LoggingIncludes( NOTICE ) ){
			log_formatter< Notice >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_formatter< Notice >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 >
void log( const Notice& NOTICE , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
		if( LoggingIncludes( NOTICE ) ){
			log_formatter< Notice >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_formatter< Notice >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 >
void log( const Notice& NOTICE , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
		if( LoggingIncludes( NOTICE ) ){
			log_formatter< Notice >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_formatter< Notice >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 >
void log( const Notice& NOTICE , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
		if( LoggingIncludes( NOTICE ) ){
			log_formatter< Notice >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_formatter< Notice >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 >
void log( const Notice& NOTICE , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
		if( LoggingIncludes( NOTICE ) ){
			log_formatter< Notice >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_formatter< Notice >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 >
void log( const Notice& NOTICE , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
		if( LoggingIncludes( NOTICE ) ){
			log_formatter< Notice >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_formatter< Notice >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 >
void log( const Notice& NOTICE , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
		if( LoggingIncludes( NOTICE ) ){
			log_formatter< Notice >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_formatter< Notice >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 >
void log( const Notice& NOTICE , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
		if( LoggingIncludes( NOTICE ) ){
			log_formatter< Notice >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_formatter< Notice >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 >
void log( const Notice& NOTICE , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
		if( LoggingIncludes( NOTICE ) ){
			log_formatter< Notice >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_formatter< Notice >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 >
void log( const Notice& NOTICE , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
		if( LoggingIncludes( NOTICE ) ){
			log_formatter< Notice >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_formatter< Notice >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 >
void log( const Notice& NOTICE , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
		if( LoggingIncludes( NOTICE ) ){
			log_formatter< Notice >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_formatter< Notice >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 >
void log( const Notice& NOTICE , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
		if( LoggingIncludes( NOTICE ) ){
			log_formatter< Notice >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_formatter< Notice >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 >
void log( const Notice& NOTICE , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
		if( LoggingIncludes( NOTICE ) ){
			log_formatter< Notice >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_formatter< Notice >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 >
void log( const Notice& NOTICE , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
		if( LoggingIncludes( NOTICE ) ){
			log_formatter< Notice >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_formatter< Notice >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 >
void log( const Notice& NOTICE , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
		if( LoggingIncludes( NOTICE ) ){
			log_formatter< Notice >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_formatter< Notice >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 >
void log( const Notice& NOTICE , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
		if( LoggingIncludes( NOTICE ) ){
			log_formatter< Notice >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_formatter< Notice >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 >
void log( const Notice& NOTICE , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
		if( LoggingIncludes( NOTICE ) ){
			log_formatter< Notice >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_formatter< Notice >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 >
void log( const Notice& NOTICE , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
		if( LoggingIncludes( NOTICE ) ){
			log_formatter< Notice >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_formatter< Notice >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 >
void log( const Notice& NOTICE , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
		if( LoggingIncludes( NOTICE ) ){
			log_formatter< Notice >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_formatter< Notice >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 >
void log( const Notice& NOTICE , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
		if( LoggingIncludes( NOTICE ) ){
			log_formatter< Notice >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_formatter< Notice >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 >
void log( const Notice& NOTICE , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
		if( LoggingIncludes( NOTICE ) ){
			log_formatter< Notice >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_formatter< Notice >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 >
void log( const Notice& NOTICE , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26 , const T27& aArg27  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
		if( LoggingIncludes( NOTICE ) ){
			log_formatter< Notice >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_inserter( aArg27 );
			log_formatter< Notice >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 >
void log( const Notice& NOTICE , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26 , const T27& aArg27 , const T28& aArg28  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
		if( LoggingIncludes( NOTICE ) ){
			log_formatter< Notice >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_inserter( aArg27 );
			log_inserter( aArg28 );
			log_formatter< Notice >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 >
void log( const Notice& NOTICE , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26 , const T27& aArg27 , const T28& aArg28 , const T29& aArg29  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
		if( LoggingIncludes( NOTICE ) ){
			log_formatter< Notice >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_inserter( aArg27 );
			log_inserter( aArg28 );
			log_inserter( aArg29 );
			log_formatter< Notice >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 >
void log( const Notice& NOTICE , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26 , const T27& aArg27 , const T28& aArg28 , const T29& aArg29 , const T30& aArg30  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
		if( LoggingIncludes( NOTICE ) ){
			log_formatter< Notice >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_inserter( aArg27 );
			log_inserter( aArg28 );
			log_inserter( aArg29 );
			log_inserter( aArg30 );
			log_formatter< Notice >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 >
void log( const Notice& NOTICE , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26 , const T27& aArg27 , const T28& aArg28 , const T29& aArg29 , const T30& aArg30 , const T31& aArg31  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
		if( LoggingIncludes( NOTICE ) ){
			log_formatter< Notice >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_inserter( aArg27 );
			log_inserter( aArg28 );
			log_inserter( aArg29 );
			log_inserter( aArg30 );
			log_inserter( aArg31 );
			log_formatter< Notice >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

// ======================================================================================================================================================
// WARNING! This file is automatically generated! Do not modify it! Any changes will be overwritten!
// ======================================================================================================================================================

template< typename T0 >
void log( const Info& INFO , const T0& aArg0  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
		if( LoggingIncludes( INFO ) ){
			log_formatter< Info >::head();
			log_inserter( aArg0 );
			log_formatter< Info >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 >
void log( const Info& INFO , const T0& aArg0 , const T1& aArg1  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
		if( LoggingIncludes( INFO ) ){
			log_formatter< Info >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_formatter< Info >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 >
void log( const Info& INFO , const T0& aArg0 , const T1& aArg1 , const T2& aArg2  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
		if( LoggingIncludes( INFO ) ){
			log_formatter< Info >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_formatter< Info >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 >
void log( const Info& INFO , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
		if( LoggingIncludes( INFO ) ){
			log_formatter< Info >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_formatter< Info >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 >
void log( const Info& INFO , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
		if( LoggingIncludes( INFO ) ){
			log_formatter< Info >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_formatter< Info >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 >
void log( const Info& INFO , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
		if( LoggingIncludes( INFO ) ){
			log_formatter< Info >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_formatter< Info >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 >
void log( const Info& INFO , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
		if( LoggingIncludes( INFO ) ){
			log_formatter< Info >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_formatter< Info >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 >
void log( const Info& INFO , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
		if( LoggingIncludes( INFO ) ){
			log_formatter< Info >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_formatter< Info >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 >
void log( const Info& INFO , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
		if( LoggingIncludes( INFO ) ){
			log_formatter< Info >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_formatter< Info >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 >
void log( const Info& INFO , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
		if( LoggingIncludes( INFO ) ){
			log_formatter< Info >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_formatter< Info >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 >
void log( const Info& INFO , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
		if( LoggingIncludes( INFO ) ){
			log_formatter< Info >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_formatter< Info >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 >
void log( const Info& INFO , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
		if( LoggingIncludes( INFO ) ){
			log_formatter< Info >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_formatter< Info >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 >
void log( const Info& INFO , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
		if( LoggingIncludes( INFO ) ){
			log_formatter< Info >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_formatter< Info >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 >
void log( const Info& INFO , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
		if( LoggingIncludes( INFO ) ){
			log_formatter< Info >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_formatter< Info >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 >
void log( const Info& INFO , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
		if( LoggingIncludes( INFO ) ){
			log_formatter< Info >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_formatter< Info >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 >
void log( const Info& INFO , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
		if( LoggingIncludes( INFO ) ){
			log_formatter< Info >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_formatter< Info >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 >
void log( const Info& INFO , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
		if( LoggingIncludes( INFO ) ){
			log_formatter< Info >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_formatter< Info >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 >
void log( const Info& INFO , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
		if( LoggingIncludes( INFO ) ){
			log_formatter< Info >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_formatter< Info >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 >
void log( const Info& INFO , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
		if( LoggingIncludes( INFO ) ){
			log_formatter< Info >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_formatter< Info >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 >
void log( const Info& INFO , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
		if( LoggingIncludes( INFO ) ){
			log_formatter< Info >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_formatter< Info >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 >
void log( const Info& INFO , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
		if( LoggingIncludes( INFO ) ){
			log_formatter< Info >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_formatter< Info >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 >
void log( const Info& INFO , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
		if( LoggingIncludes( INFO ) ){
			log_formatter< Info >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_formatter< Info >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 >
void log( const Info& INFO , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
		if( LoggingIncludes( INFO ) ){
			log_formatter< Info >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_formatter< Info >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 >
void log( const Info& INFO , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
		if( LoggingIncludes( INFO ) ){
			log_formatter< Info >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_formatter< Info >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 >
void log( const Info& INFO , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
		if( LoggingIncludes( INFO ) ){
			log_formatter< Info >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_formatter< Info >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 >
void log( const Info& INFO , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
		if( LoggingIncludes( INFO ) ){
			log_formatter< Info >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_formatter< Info >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 >
void log( const Info& INFO , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
		if( LoggingIncludes( INFO ) ){
			log_formatter< Info >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_formatter< Info >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 >
void log( const Info& INFO , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26 , const T27& aArg27  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
		if( LoggingIncludes( INFO ) ){
			log_formatter< Info >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_inserter( aArg27 );
			log_formatter< Info >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 >
void log( const Info& INFO , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26 , const T27& aArg27 , const T28& aArg28  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
		if( LoggingIncludes( INFO ) ){
			log_formatter< Info >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_inserter( aArg27 );
			log_inserter( aArg28 );
			log_formatter< Info >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 >
void log( const Info& INFO , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26 , const T27& aArg27 , const T28& aArg28 , const T29& aArg29  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
		if( LoggingIncludes( INFO ) ){
			log_formatter< Info >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_inserter( aArg27 );
			log_inserter( aArg28 );
			log_inserter( aArg29 );
			log_formatter< Info >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 >
void log( const Info& INFO , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26 , const T27& aArg27 , const T28& aArg28 , const T29& aArg29 , const T30& aArg30  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
		if( LoggingIncludes( INFO ) ){
			log_formatter< Info >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_inserter( aArg27 );
			log_inserter( aArg28 );
			log_inserter( aArg29 );
			log_inserter( aArg30 );
			log_formatter< Info >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 >
void log( const Info& INFO , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26 , const T27& aArg27 , const T28& aArg28 , const T29& aArg29 , const T30& aArg30 , const T31& aArg31  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
		if( LoggingIncludes( INFO ) ){
			log_formatter< Info >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_inserter( aArg27 );
			log_inserter( aArg28 );
			log_inserter( aArg29 );
			log_inserter( aArg30 );
			log_inserter( aArg31 );
			log_formatter< Info >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

// ======================================================================================================================================================
// WARNING! This file is automatically generated! Do not modify it! Any changes will be overwritten!
// ======================================================================================================================================================

template< typename T0 >
void log( const Debug& DEBUG , const T0& aArg0  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
	#ifndef LOGGING_EXCLUDE_DEBUG
		if( LoggingIncludes( DEBUG ) ){
			log_formatter< Debug >::head();
			log_inserter( aArg0 );
			log_formatter< Debug >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 >
void log( const Debug& DEBUG , const T0& aArg0 , const T1& aArg1  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
	#ifndef LOGGING_EXCLUDE_DEBUG
		if( LoggingIncludes( DEBUG ) ){
			log_formatter< Debug >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_formatter< Debug >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 >
void log( const Debug& DEBUG , const T0& aArg0 , const T1& aArg1 , const T2& aArg2  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
	#ifndef LOGGING_EXCLUDE_DEBUG
		if( LoggingIncludes( DEBUG ) ){
			log_formatter< Debug >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_formatter< Debug >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 >
void log( const Debug& DEBUG , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
	#ifndef LOGGING_EXCLUDE_DEBUG
		if( LoggingIncludes( DEBUG ) ){
			log_formatter< Debug >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_formatter< Debug >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 >
void log( const Debug& DEBUG , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
	#ifndef LOGGING_EXCLUDE_DEBUG
		if( LoggingIncludes( DEBUG ) ){
			log_formatter< Debug >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_formatter< Debug >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 >
void log( const Debug& DEBUG , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
	#ifndef LOGGING_EXCLUDE_DEBUG
		if( LoggingIncludes( DEBUG ) ){
			log_formatter< Debug >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_formatter< Debug >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 >
void log( const Debug& DEBUG , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
	#ifndef LOGGING_EXCLUDE_DEBUG
		if( LoggingIncludes( DEBUG ) ){
			log_formatter< Debug >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_formatter< Debug >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 >
void log( const Debug& DEBUG , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
	#ifndef LOGGING_EXCLUDE_DEBUG
		if( LoggingIncludes( DEBUG ) ){
			log_formatter< Debug >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_formatter< Debug >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 >
void log( const Debug& DEBUG , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
	#ifndef LOGGING_EXCLUDE_DEBUG
		if( LoggingIncludes( DEBUG ) ){
			log_formatter< Debug >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_formatter< Debug >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 >
void log( const Debug& DEBUG , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
	#ifndef LOGGING_EXCLUDE_DEBUG
		if( LoggingIncludes( DEBUG ) ){
			log_formatter< Debug >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_formatter< Debug >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 >
void log( const Debug& DEBUG , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
	#ifndef LOGGING_EXCLUDE_DEBUG
		if( LoggingIncludes( DEBUG ) ){
			log_formatter< Debug >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_formatter< Debug >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 >
void log( const Debug& DEBUG , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
	#ifndef LOGGING_EXCLUDE_DEBUG
		if( LoggingIncludes( DEBUG ) ){
			log_formatter< Debug >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_formatter< Debug >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 >
void log( const Debug& DEBUG , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
	#ifndef LOGGING_EXCLUDE_DEBUG
		if( LoggingIncludes( DEBUG ) ){
			log_formatter< Debug >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_formatter< Debug >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 >
void log( const Debug& DEBUG , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
	#ifndef LOGGING_EXCLUDE_DEBUG
		if( LoggingIncludes( DEBUG ) ){
			log_formatter< Debug >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_formatter< Debug >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 >
void log( const Debug& DEBUG , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
	#ifndef LOGGING_EXCLUDE_DEBUG
		if( LoggingIncludes( DEBUG ) ){
			log_formatter< Debug >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_formatter< Debug >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 >
void log( const Debug& DEBUG , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
	#ifndef LOGGING_EXCLUDE_DEBUG
		if( LoggingIncludes( DEBUG ) ){
			log_formatter< Debug >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_formatter< Debug >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 >
void log( const Debug& DEBUG , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
	#ifndef LOGGING_EXCLUDE_DEBUG
		if( LoggingIncludes( DEBUG ) ){
			log_formatter< Debug >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_formatter< Debug >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 >
void log( const Debug& DEBUG , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
	#ifndef LOGGING_EXCLUDE_DEBUG
		if( LoggingIncludes( DEBUG ) ){
			log_formatter< Debug >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_formatter< Debug >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 >
void log( const Debug& DEBUG , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
	#ifndef LOGGING_EXCLUDE_DEBUG
		if( LoggingIncludes( DEBUG ) ){
			log_formatter< Debug >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_formatter< Debug >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 >
void log( const Debug& DEBUG , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
	#ifndef LOGGING_EXCLUDE_DEBUG
		if( LoggingIncludes( DEBUG ) ){
			log_formatter< Debug >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_formatter< Debug >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 >
void log( const Debug& DEBUG , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
	#ifndef LOGGING_EXCLUDE_DEBUG
		if( LoggingIncludes( DEBUG ) ){
			log_formatter< Debug >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_formatter< Debug >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 >
void log( const Debug& DEBUG , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
	#ifndef LOGGING_EXCLUDE_DEBUG
		if( LoggingIncludes( DEBUG ) ){
			log_formatter< Debug >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_formatter< Debug >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 >
void log( const Debug& DEBUG , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
	#ifndef LOGGING_EXCLUDE_DEBUG
		if( LoggingIncludes( DEBUG ) ){
			log_formatter< Debug >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_formatter< Debug >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 >
void log( const Debug& DEBUG , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
	#ifndef LOGGING_EXCLUDE_DEBUG
		if( LoggingIncludes( DEBUG ) ){
			log_formatter< Debug >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_formatter< Debug >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 >
void log( const Debug& DEBUG , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
	#ifndef LOGGING_EXCLUDE_DEBUG
		if( LoggingIncludes( DEBUG ) ){
			log_formatter< Debug >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_formatter< Debug >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 >
void log( const Debug& DEBUG , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
	#ifndef LOGGING_EXCLUDE_DEBUG
		if( LoggingIncludes( DEBUG ) ){
			log_formatter< Debug >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_formatter< Debug >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 >
void log( const Debug& DEBUG , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
	#ifndef LOGGING_EXCLUDE_DEBUG
		if( LoggingIncludes( DEBUG ) ){
			log_formatter< Debug >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_formatter< Debug >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 >
void log( const Debug& DEBUG , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26 , const T27& aArg27  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
	#ifndef LOGGING_EXCLUDE_DEBUG
		if( LoggingIncludes( DEBUG ) ){
			log_formatter< Debug >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_inserter( aArg27 );
			log_formatter< Debug >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 >
void log( const Debug& DEBUG , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26 , const T27& aArg27 , const T28& aArg28  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
	#ifndef LOGGING_EXCLUDE_DEBUG
		if( LoggingIncludes( DEBUG ) ){
			log_formatter< Debug >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_inserter( aArg27 );
			log_inserter( aArg28 );
			log_formatter< Debug >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 >
void log( const Debug& DEBUG , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26 , const T27& aArg27 , const T28& aArg28 , const T29& aArg29  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
	#ifndef LOGGING_EXCLUDE_DEBUG
		if( LoggingIncludes( DEBUG ) ){
			log_formatter< Debug >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_inserter( aArg27 );
			log_inserter( aArg28 );
			log_inserter( aArg29 );
			log_formatter< Debug >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 >
void log( const Debug& DEBUG , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26 , const T27& aArg27 , const T28& aArg28 , const T29& aArg29 , const T30& aArg30  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
	#ifndef LOGGING_EXCLUDE_DEBUG
		if( LoggingIncludes( DEBUG ) ){
			log_formatter< Debug >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_inserter( aArg27 );
			log_inserter( aArg28 );
			log_inserter( aArg29 );
			log_inserter( aArg30 );
			log_formatter< Debug >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 >
void log( const Debug& DEBUG , const T0& aArg0 , const T1& aArg1 , const T2& aArg2 , const T3& aArg3 , const T4& aArg4 , const T5& aArg5 , const T6& aArg6 , const T7& aArg7 , const T8& aArg8 , const T9& aArg9 , const T10& aArg10 , const T11& aArg11 , const T12& aArg12 , const T13& aArg13 , const T14& aArg14 , const T15& aArg15 , const T16& aArg16 , const T17& aArg17 , const T18& aArg18 , const T19& aArg19 , const T20& aArg20 , const T21& aArg21 , const T22& aArg22 , const T23& aArg23 , const T24& aArg24 , const T25& aArg25 , const T26& aArg26 , const T27& aArg27 , const T28& aArg28 , const T29& aArg29 , const T30& aArg30 , const T31& aArg31  )
{
	#ifndef LOGGING_EXCLUDE_EMERGENCY
	#ifndef LOGGING_EXCLUDE_ALERT
	#ifndef LOGGING_EXCLUDE_CRITICAL
	#ifndef LOGGING_EXCLUDE_ERROR
	#ifndef LOGGING_EXCLUDE_WARNING
	#ifndef LOGGING_EXCLUDE_NOTICE
	#ifndef LOGGING_EXCLUDE_INFO
	#ifndef LOGGING_EXCLUDE_DEBUG
		if( LoggingIncludes( DEBUG ) ){
			log_formatter< Debug >::head();
			log_inserter( aArg0 );
			log_inserter( aArg1 );
			log_inserter( aArg2 );
			log_inserter( aArg3 );
			log_inserter( aArg4 );
			log_inserter( aArg5 );
			log_inserter( aArg6 );
			log_inserter( aArg7 );
			log_inserter( aArg8 );
			log_inserter( aArg9 );
			log_inserter( aArg10 );
			log_inserter( aArg11 );
			log_inserter( aArg12 );
			log_inserter( aArg13 );
			log_inserter( aArg14 );
			log_inserter( aArg15 );
			log_inserter( aArg16 );
			log_inserter( aArg17 );
			log_inserter( aArg18 );
			log_inserter( aArg19 );
			log_inserter( aArg20 );
			log_inserter( aArg21 );
			log_inserter( aArg22 );
			log_inserter( aArg23 );
			log_inserter( aArg24 );
			log_inserter( aArg25 );
			log_inserter( aArg26 );
			log_inserter( aArg27 );
			log_inserter( aArg28 );
			log_inserter( aArg29 );
			log_inserter( aArg30 );
			log_inserter( aArg31 );
			log_formatter< Debug >::tail();
		}
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
	#endif
}

// ======================================================================================================================================================
// WARNING! This file is automatically generated! Do not modify it! Any changes will be overwritten!
// ======================================================================================================================================================

}

