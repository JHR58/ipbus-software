## Sconstruct file for the IPbusClient package
#	@author Andrew W. Rose
#	@date 2012

## Import the environment from the SConstruct File
import os
import glob

Import('env')

AddOption( '--generator' , action='store' , dest='generator' , default='' , help='build generator' ) 

localenv = env.Clone()
localenv.VariantDir( localenv.BuildPath+'/src/common' , 'src/common' , duplicate=0 )
localenv.VariantDir( localenv.SrcBuildPath , 'src/common' , duplicate=0 )

if localenv.GetOption('generator'):
	localenv.Append( 
		CCFLAGS = [	'-D MAX_NUM_ARGS=32' ]
	) 
	
	localenv.Program( 
		target = 'bin/generator', 
		source = [ localenv.SrcBuildPath+'/src/common/generator.cxx' , localenv.SrcBuildPath+'/src/common/log_configuration.cpp' ]
	)
	
else:

	log = localenv.SharedLibrary( 
		target = localenv.LibPath+'/log', 
		source = [ Glob(localenv.BuildPath+'/src/common/*.cpp') ]
	)
	
	# Install the libraries
	localenv.Install( localenv.InstallPath , [ log ] )
	localenv.Alias( 'install', localenv.InstallPath )
	
	localenv.Program( 
		target = 'bin/test', 
		source = [ localenv.SrcBuildPath+'/test.cxx' ],
		LIBS = [ log ]
	)