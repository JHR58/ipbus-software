BUILD_HOME = $(shell cd)\..\..\..

include $(BUILD_HOME)\config\Makefile.win.macros

Package = uhal\grammars
PackagePath = $(CACTUS_RPM_ROOT)\${Package}
PackageName = cactuscore-uhal-grammars

Packager = Andrew Rose

PACKAGE_VER_MAJOR = 1
PACKAGE_VER_MINOR = 0
PACKAGE_VER_PATCH = 2
PACKAGE_RELEASE = 1

LIBRARY = lib\libcactus_uhal_grammars.so

SOURCES = $(wildcard src\common\*.cpp)
OBJECT_FILES = $(patsubst src\common\%.cpp,obj\%.o,${SOURCES})

LIBRARY_PATH = 	

LIBRARIES =  -L${UHAL_LOG_LIB_PREFIX} -lcactus_uhal_log

INCLUDE_PATH = 	-Iinclude  \
		-I${EXTERN_BOOST_INCLUDE_PREFIX} \
		-I${UHAL_LOG_INCLUDE_PREFIX}


CPP_FLAGS = -g -O3 -Wall -MMD -MP -fPIC
LINK_FLAGS = -g -shared -Wall -O3

MSBUILD_DIR = ${PackagePath}\MSBUILD

.PHONY: all _all clean _cleanall build _buildall install _installall rpm _rpmall test _testall spec_update

default: build

clean: _cleanall
_cleanall:
	rm -rf ${MSBUILD_DIR}
	rm -rf obj
	rm -rf lib

all: _all
build: _all
buildall: _all
_all: make_dirs ${LIBRARY} copy_to_build

make_dirs:
	for %%a in (obj lib) do if not exist %%a mkdir %%a


${LIBRARY}: ${OBJECT_FILES}
	g++ ${LINK_FLAGS} ${LIBRARY_PATH} ${LIBRARIES} ${OBJECT_FILES} -o $@

${OBJECT_FILES}: obj\%.o : src\common\%.cpp ${INCLUDES} 
	g++ ${INCLUDE_PATH} -c $< ${CPP_FLAGS} -o $@

-include $(SOURCES:.cpp=.d)
	
copy_to_build:
	cp -p lib\*.so ${MSBUILD_DIR}\SOURCES\lib\.
	cp -p include\uhal\grammars\*.hpp ${MSBUILD_DIR}\SOURCES\include\uhal\grammars\.



