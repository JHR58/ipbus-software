
stages:
  - initial_report
  - build
  - publish_build
  - test
  - final_report


variables:
  GITHUB_REPO_API_URL: "https://api.github.com/repos/ipbus/ipbus-software"
  IPBUS_DOCKER_REGISTRY: "gitlab-registry.cern.ch/ipbus/ipbus-docker"
  OUTPUT_ROOT_DIR: "/eos/user/i/ipbusci/sw-gitlab-ci"
  OUTPUT_ROOT_URL: "http://www.cern.ch/ipbus/sw/ci"



github_commit_status:start:
  stage: initial_report
  image: cern/cc7-base:20170113
  tags:
    - docker
  except:
    - tags
    - triggers
  when: always
  script:
    - "curl -H \"Authorization: token ${GITHUB_STATUS_TOKEN}\" --data '{\"state\" : \"pending\", \"target_url\" : \"'\"${CI_PROJECT_URL}\"'/pipelines/'\"${CI_PIPELINE_ID}\"'\", \"description\" : \"CI pipeline has started\", \"context\" : \"gitlab-ci\"}' ${GITHUB_REPO_API_URL}/statuses/${CI_BUILD_REF}"

github_commit_status:end:failure:
  stage: final_report
  image: cern/cc7-base:20170113
  tags:
    - docker
  except:
    - tags
    - triggers
  when: on_failure
  script:
    - "curl -H \"Authorization: token ${GITHUB_STATUS_TOKEN}\" --data '{\"state\" : \"failure\", \"target_url\" : \"'\"${CI_PROJECT_URL}\"'/pipelines/'\"${CI_PIPELINE_ID}\"'\", \"description\" : \"Jobs have failed in CI pipeline\", \"context\" : \"gitlab-ci\"}' ${GITHUB_REPO_API_URL}/statuses/${CI_BUILD_REF}"
  dependencies: []

github_commit_status:end:success:
  stage: final_report
  image: cern/cc7-base:20170113
  tags:
    - docker
  except:
    - tags
    - triggers
  when: on_success
  script:
    - "curl -H \"Authorization: token ${GITHUB_STATUS_TOKEN}\" --data '{\"state\" : \"success\", \"target_url\" : \"'\"${CI_PROJECT_URL}\"'/pipelines/'\"${CI_PIPELINE_ID}\"'\", \"description\" : \"CI pipeline completed successfully!\", \"context\" : \"gitlab-ci\"}' ${GITHUB_REPO_API_URL}/statuses/${CI_BUILD_REF}"
  dependencies: []


doxygen_job:
  stage: build
  image: ${IPBUS_DOCKER_REGISTRY}/ipbus-sw-doxygen:2017-11-04__doxygen1.8.13
  tags:
    - docker
  except:
    - triggers
  script:
    - env | grep -v PASSWORD | grep -v TOKEN
    - cd ${CI_PROJECT_DIR}
    - ./scripts/doxygen/api_uhal.sh "(${CI_COMMIT_TAG:-commit ${CI_COMMIT_SHA}})"
    - ls -al /tmp
    - mkdir -p ${CI_PROJECT_DIR}/ci_build_results/
    - mv /tmp/api_uhal ${CI_PROJECT_DIR}/ci_build_results/api_uhal
  artifacts:
    paths:
      - ci_build_results/api_uhal
    when: always
    expire_in: 1 day




.job_template: &simple_build_test_job
  stage: build
  tags:
    - docker
  except:
    - triggers
  script:
    - env | grep -v PASSWORD | grep -v TOKEN
    - make -k Set=all
    - source uhal/tests/setup.sh
    - python uhal/tests/scripts/uhal_test_suite.py -v -c uhal/tests/etc/uhal/tests/dummy_connections.xml -s "2.0 udp"
    - python uhal/tests/scripts/uhal_test_suite.py -v -c uhal/tests/etc/uhal/tests/dummy_connections.xml -s "pycohal"
    - python uhal/tests/scripts/uhal_test_suite.py -v -c uhal/tests/etc/uhal/tests/dummy_connections.xml -s "2.0 controlhub - normal"


.job_template: &build_rpm_yumrepo_job
  stage: build
  tags:
    - docker
  except:
    - triggers
  before_script:
    - export REPO_DIR=${CI_PROJECT_DIR}/ci_build_results/repos/${OUTPUT_REPO_SUBDIR}
  script:
    - env | grep -v PASSWORD | grep -v TOKEN
    - cd .. && sudo rm -rf ipbus-software____ && mv ipbus-software ipbus-software____ && mkdir ipbus-software && cd ipbus-software____
    - make -k Set=all
    - make -k Set=all rpm
    - mkdir -p ${REPO_DIR} 
    - cp `find . -iname "*.rpm"` ${REPO_DIR} && cp ${YUMGROUPS_FILE} ${REPO_DIR}/yumgroups.xml
    - ls ${REPO_DIR}
    - createrepo -vg yumgroups.xml ${REPO_DIR}
  artifacts:
    paths:
      - ci_build_results/repos/${OUTPUT_REPO_SUBDIR}
    when: always
    expire_in: 1 day


build:slc6:
  <<: *build_rpm_yumrepo_job
  image: ${IPBUS_DOCKER_REGISTRY}/ipbus-sw-dev-slc6:2017-11-04
  variables:
    YUMGROUPS_FILE: "ci/yumgroups-slc6.xml"
    OUTPUT_REPO_SUBDIR: "slc6_x86_64"


build:centos7:
  <<: *build_rpm_yumrepo_job
  image: ${IPBUS_DOCKER_REGISTRY}/ipbus-sw-dev-cc7:2017-11-04__boost1.53.0_pugixml1.8
  variables:
    YUMGROUPS_FILE: "ci/yumgroups-centos7.xml"
    OUTPUT_REPO_SUBDIR: "centos7_x86_64"


build:fedora26:
  <<: *simple_build_test_job
  image: ${IPBUS_DOCKER_REGISTRY}/ipbus-sw-dev-fedora26:2017-11-04__erlang19.3.6.3_gcc7.1.1_boost1.63.0_pugixml1.8
  variables:
    YUMGROUPS_FILE: "ci/yumgroups-centos7.xml"
    OUTPUT_REPO_SUBDIR: "fedora26_x86_64"

build:ubuntu16:
  <<: *simple_build_test_job
  image: ${IPBUS_DOCKER_REGISTRY}/ipbus-sw-dev-ubuntu16:master__erlang18.3_gcc5.3.1_boost1.58.0_pugixml1.7


publish_build_job:
  stage: publish_build
  image: gitlab-registry.cern.ch/ci-tools/ci-web-deployer:latest
  variables:
    CI_OUTPUT_DIR: "ci_build_results/"
  before_script:
    - yum -y install openssh-clients
    - export EOS_PATH=${OUTPUT_ROOT_DIR}/commits/${CI_COMMIT_TAG:-${CI_COMMIT_SHA}}/pipeline${CI_PIPELINE_ID}
    - if [ -n "${CI_COMMIT_TAG}" ]; then export EOS_PATH=${OUTPUT_PIPELINE_URL/commits/tags} ; fi
  script:
    - env | grep -v PASSWORD | grep -v TOKEN | sort
    - echo "${EOS_ACCOUNT_PASSWORD}" | kinit ${EOS_ACCOUNT_USERNAME}@CERN.CH
    - klist
    - ssh -F ${CI_PROJECT_DIR}/ci/ssh_config ${EOS_ACCOUNT_USERNAME}@lxplus "rm -rf ${EOS_PATH} && mkdir -p ${EOS_PATH}"
    - ssh -F ${CI_PROJECT_DIR}/ci/ssh_config ${EOS_ACCOUNT_USERNAME}@lxplus "ln -sfnv ${EOS_PATH} `dirname ${EOS_PATH}`/latest"
    - kdestroy
    - ls -lt ${CI_OUTPUT_DIR}
    - deploy-eos




.job_template: &slc6_test_job
  stage: test
  image: ${IPBUS_DOCKER_REGISTRY}/ipbus-sw-test-slc6:2017-11-04
  except:
    - triggers
  dependencies: []
  before_script:
    - export OUTPUT_PIPELINE_URL=${OUTPUT_ROOT_URL}/commits/${CI_COMMIT_TAG:-${CI_COMMIT_SHA}}/pipeline${CI_PIPELINE_ID}
    - if [ -n "${CI_COMMIT_TAG}" ]; then export OUTPUT_PIPELINE_URL=${OUTPUT_PIPELINE_URL/commits/tags} ; fi
    - sudo cp ci/ipbus-sw-ci.repo /etc/yum.repos.d/ipbus-sw-ci.repo
    - sudo sed -i -re "s|^baseurl=.*|baseurl=${OUTPUT_PIPELINE_URL}/repos/slc6_x86_64|g" /etc/yum.repos.d/ipbus-sw-ci.repo
    - sudo rpm --rebuilddb && sudo yum clean all 
    - sudo yum -y groupinstall uhal
    - rpm -qa | grep cactus | sort


.job_template: &centos7_test_job
  stage: test
  image: ${IPBUS_DOCKER_REGISTRY}/ipbus-sw-test-cc7:2017-11-04
  except:
    - triggers
  dependencies: []
  before_script:
    - export OUTPUT_PIPELINE_URL=${OUTPUT_ROOT_URL}/commits/${CI_COMMIT_TAG:-${CI_COMMIT_SHA}}/pipeline${CI_PIPELINE_ID}
    - if [ -n "${CI_COMMIT_TAG}" ]; then export OUTPUT_PIPELINE_URL=${OUTPUT_PIPELINE_URL/commits/tags} ; fi
    - sudo cp ci/ipbus-sw-ci.repo /etc/yum.repos.d/ipbus-sw-ci.repo
    - sudo sed -i -re "s|^baseurl=.*|baseurl=${OUTPUT_PIPELINE_URL}/repos/centos7_x86_64|g" /etc/yum.repos.d/ipbus-sw-ci.repo
    - sudo rpm --rebuilddb && sudo yum clean all
    - sudo yum -y groupinstall uhal
    - rpm -qa | grep cactus | sort
    - export TEST_SUITE_CONTROLHUB_PATH_ARGUMENT="-p /opt/cactus/bin"


.job_template:
  script: &test_core_script
    - export PATH=/opt/cactus/bin:/opt/cactus/bin/uhal/tests:$PATH
    - export LD_LIBRARY_PATH=/opt/cactus/lib:$LD_LIBRARY_PATH
    - env | grep -v PASSWORD | grep -v TOKEN
    - uhal_test_suite.py -v -s "1.3 udp"
    - uhal_test_suite.py -v -s "1.3 tcp"
    - service controlhub stop || /opt/cactus/bin/controlhub_stop || true
    - uhal_test_suite.py -v -s "1.3 controlhub" ${TEST_SUITE_CONTROLHUB_PATH_ARGUMENT}
    - uhal_test_suite.py -v -s "2.0 udp"
    - uhal_test_suite.py -v -s "2.0 tcp"
    - uhal_test_suite.py -v -s "2.0 controlhub - normal" ${TEST_SUITE_CONTROLHUB_PATH_ARGUMENT}
    - uhal_test_suite.py -v -s "2.0 controlhub - light packet loss" ${TEST_SUITE_CONTROLHUB_PATH_ARGUMENT}

.job_template:
  script: &test_python_script
    - export PATH=/opt/cactus/bin/uhal/tests:$PATH
    - export LD_LIBRARY_PATH=/opt/cactus/lib:$LD_LIBRARY_PATH
    - env | grep -v PASSWORD | grep -v TOKEN
    - uhal_test_suite.py -v -s pycohal

.job_template:
  script: &test_gui_script
    - sudo yum -y install wxPython numpy
    - export PATH=/opt/cactus/bin/uhal/tests:$PATH
    - export LD_LIBRARY_PATH=/opt/cactus/lib:$LD_LIBRARY_PATH
    - env | grep -v PASSWORD | grep -v TOKEN
    - uhal_test_suite.py -v -s gui

.job_template:
  script: &test_tools_script
    - export PATH=/opt/cactus/bin/uhal/tests:/opt/cactus/bin/uhal/tools:$PATH
    - export LD_LIBRARY_PATH=/opt/cactus/lib:$LD_LIBRARY_PATH
    - env | grep -v PASSWORD | grep -v TOKEN
    - uhal_test_suite.py -v -s tools



test_core:slc6:
  <<: *slc6_test_job
  tags:
    - docker
    - docker-cap-net-admin
  script: *test_core_script

test_python:slc6:
  <<: *slc6_test_job
  tags:
    - docker
  script: *test_python_script

test_gui:slc6:
  <<: *slc6_test_job
  tags:
    - docker
  script: *test_gui_script

test_tools:slc6:
  <<: *slc6_test_job
  tags:
    - docker
  script: *test_tools_script

test_controlhub:slc6:
  <<: *slc6_test_job
  tags:
    - docker
  script:
    - /sbin/service controlhub stop
    - env | grep -v PASSWORD | grep -v TOKEN
    - 'for i in `seq 1 50`; do /sbin/service controlhub start; if [ "$?" != "0" ]; then echo "ERROR IN STARTING CONTROLHUB"; fi; /sbin/service controlhub status; if [ "$?" != "0" ]; then echo "ERROR: CONTROLHUB SHOULD HAVE ALREADY STARTED"; fi; /sbin/service controlhub stop; done'



test_core:centos7:
  <<: *centos7_test_job
  tags:
    - docker
    - docker-cap-net-admin
  script: *test_core_script

test_python:centos7:
  <<: *centos7_test_job
  tags:
    - docker
  script: *test_python_script

test_gui:centos7:
  <<: *centos7_test_job
  tags:
    - docker
  script: *test_gui_script

test_tools:centos7:
  <<: *centos7_test_job
  tags:
    - docker
  script: *test_tools_script

test_controlhub:centos7:
  <<: *centos7_test_job
  tags:
    - docker
  script: 
    - /opt/cactus/bin/controlhub_stop || true
    - env | grep -v PASSWORD | grep -v TOKEN
    - 'for i in `seq 1 50`; do /opt/cactus/bin/controlhub_start; if [ "$?" != "0" ]; then echo "ERROR IN STARTING CONTROLHUB"; fi; /opt/cactus/bin/controlhub_status; if [ "$?" != "0" ]; then echo "ERROR: CONTROLHUB SHOULD HAVE ALREADY STARTED"; fi; /opt/cactus/bin/controlhub_stop; done'
